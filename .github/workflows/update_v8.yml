name: '[android] [third_party] update v8'

on:
  workflow_dispatch:
    inputs:
      v8_version:
        description: 'V8 version to build'
        default: '7.7.229'
        required: true
      release_tag:
        description: 'Release tag'
        default: 'latest'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/android-release:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Fetch v8
      run: |
        fetch v8
        cd v8
        git checkout ${{ github.event.inputs.v8_version }}
    - name: Sync third_party
      working-directory: ./v8
      run: |
        echo "target_os = ['android']" >> ../.gclient
        gclient sync -D
    - name: Prepare android_ndk
      working-directory: ./v8
      run: |
        if [ -d third_party/android_tools ]; then
          rm -rf third_party/android_tools
          mkdir third_party/android_tools
          ln -s $ANDROID_NDK_HOME third_party/android_tools/ndk
        fi
        if [ -f third_party/android_ndk/BUILD.gn ]; then
          cp third_party/android_ndk/BUILD.gn $ANDROID_NDK_HOME
        fi
        if [ -d third_party/android_tools -o -f third_party/android_ndk/BUILD.gn ]; then
          rm -rf third_party/android_ndk
          ln -s $ANDROID_NDK_HOME third_party/android_ndk
        fi
    - name: Upload source
      uses: actions/upload-artifact@v2
      with:
        name: source
        path: ./v8
  build:
    needs: prepare
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/android-release:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        arch: [arm, arm64, x86, x64]
    steps:
    - name: Fetch source
      uses: actions/download-artifact@v2
      with: 
        name: source
    - name: Generate ${{ matrix.arch }}
      working-directory: ./v8
      run: |
        gn gen out/${{ matrix.arch }} --args="target_os=\"android\" target_cpu=\"${{ matrix.arch }}\" v8_target_cpu=\"${{ matrix.arch }}\" is_component_build=true is_debug=false v8_use_external_startup_data=false is_official_build=true v8_enable_i18n_support=false treat_warnings_as_errors=false enable_resource_allowlist_generation=false"
    - name: Compile ${{ matrix.arch }}
      working-directory: ./v8
      run: |
        ninja -C out/${{ matrix.arch }} v8
    - name: Release artifact
      working-directory: ./v8/out/${{ matrix.arch }}
      run: |
        mkdir -p artifact/dist/${{ matrix.arch }}
        cp *.so artifact/dist/${{ matrix.arch }}
        cp -r lib.unstripped artifact/dist/${{ matrix.arch }}
    - name: Upload ${{ matrix.arch }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.arch }}
        path: ./v8/out/${{ matrix.arch }}/artifact
  pull-request:
    needs: [build, prepare]
    runs-on: ubuntu-latest
    env:
      v8-dist: ./{{ github.repository }}/android/sdk/src/main/jni/third_party/v8/{{ github.event.inputs.release_tag }}
    steps:
    - name: Fetch artifact
      uses: actions/download-artifact@v2
      with: 
        path: ./artifact
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        path: ${{ github.repository }}
    - name: Construct directory structure
      working-directory: ${{ env.v8-dist }}
      run: |
        rm -rf full
        mkdir -p full full/libs full/include/v8
    - name: Copy artifact
      run: |
        cp -r ./artifact/v8/include/* {{ env.v8-dist }}/include/v8
        cp -r ./artifact/dist/* {{ env.v8-dist }}/libs/
    - name: Display structure of downloaded files
      working-directory: ${{ env.v8-dist }}
      run: ls -R
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        path: ./{{ github.repository }}
        commit-message: 'deps: update V8 to {{ github.event.inputs.v8_version }}'
        branch: deps/update-v8-to-${{ github.event.inputs.v8_version }}
        delete-branch: true
        title: 'deps: update V8 to {{ github.event.inputs.v8_version }}'
        body: |
          Refs: [{{ github.event.inputs.v8_version }}](https://github.com/v8/v8/tree/{{ github.event.inputs.v8_version }})
          Release TAG: {{ github.event.inputs.release_tag }}
        labels: |
          dependencies
          android