name: 'greetings'

on:
  workflow_dispatch:


jobs:
  z:
    runs-on: ubuntu-latest
    env:
      safety_changes_message: |
        After a quick scan, I have approved workflow to run.
      risky_changes_message: |
        Sorry, due to risky changes, I can\'t approve workflow to run, our collaborators will handle it asap.
      details_message: |
        <details>

        * SHA: 123

        </details>
      tips_message: |
        :label: **New commits in this PR would not be tested automatically** until our collaborators do something verified for them. After that, collaborators would either approve this PR or apply the action(approve-checks) label to this PR.
        :label: **No need to worry about the status of `merge_guard ` and `[gh] pull request merge guard / merge_guard (pull_request_target)` checks**, once this pull request is met merge requirements, it will be automatically converted to successful status.

    steps:
    - name: Message
      id: generate_message
      run: |
        message="$${{ 'true' == 'true' && 'risky_changes_message' || 'safety_changes_message' }}"

        echo "comment_message<<EOF" >> $GITHUB_OUTPUT
        echo "$message" >> $GITHUB_OUTPUT
        echo "$details_message" >> $GITHUB_OUTPUT
        if [[ "opened" == *"opened"* ]]; then
          echo >> $GITHUB_OUTPUT
          echo "$tips_message" >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT

        echo "search_message<<EOF" >> $GITHUB_OUTPUT
        echo "$message" >> $GITHUB_OUTPUT
        echo "$details_message" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

  a:
    needs: z
    if: 1 == 2
    runs-on: ubuntu-latest
    steps:
    - run: |
        exit -1
  b:
    needs: z
    runs-on: ubuntu-latest
    steps:
    - run: |
        sleep 100
  
  c:
    needs: [ a, b ]
    if: always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "${{ toJSON(needs.*.result) }}"
